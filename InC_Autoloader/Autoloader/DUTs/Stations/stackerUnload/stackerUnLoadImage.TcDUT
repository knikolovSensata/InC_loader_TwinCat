<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <DUT Name="stackerUnLoadImage" Id="{7fc89de5-e988-4b65-83d9-c447efbc9098}">
    <Declaration><![CDATA[TYPE stackerUnLoadImage :
STRUCT
	xLock1_lock 	        	   : imageIO := ( stIO  := Stations.sUnloadHmiIO.x_Lock1_lock,
									   image  		:= ADR(Global.INPUT_IMAGE),
									   iType  		:= ioType.INPUT_BIT,
									   iByte 		:= 0,
									   iBit  		:= 1 );	
									   
   xLock1_unlock				: imageIO := ( stIO   := Stations.sUnloadHmiIO.x_Lock1_unlock,
									   image 		  := ADR(Global.INPUT_IMAGE),
									   iType  		  := ioType.INPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 2 );

    xLock2_lock 				: imageIO := ( stIO   := Stations.sUnloadHmiIO.x_Lock2_lock,
									   image  		  := ADR(Global.INPUT_IMAGE),
									   iType  		  := ioType.INPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 3 );
									  
    xLock2_unlock 				: imageIO := ( stIO   := Stations.sUnloadHmiIO.x_Lock2_unlock,
									   image  		  := ADR(Global.INPUT_IMAGE),
									   iType  		  := ioType.INPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 3 );

    xPalletOnTop 				: imageIO := ( stIO   := Stations.sUnloadHmiIO.x_PalletOnTop,
									   image  		  := ADR(Global.INPUT_IMAGE),
									   iType  		  := ioType.INPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 3 );

    xPalletFix_lock 				: imageIO := ( stIO   := Stations.sUnloadHmiIO.x_PalletFix_lock,
									   image  		  := ADR(Global.INPUT_IMAGE),
									   iType  		  := ioType.INPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 3 );

    xPalletFix_unlock 				: imageIO := ( stIO   := Stations.sUnloadHmiIO.x_PalletFix_unlock,
									   image  		  := ADR(Global.INPUT_IMAGE),
									   iType  		  := ioType.INPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 3 );

    yLock1_lock 				: imageIO := ( stIO   := Stations.sUnloadHmiIO.y_Lock1_lock,
									   image  		  := ADR(Global.OUTPUT_IMAGE),
									   iType  		  := ioType.OUTPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 3 ); 

    yLock1_unlock 				: imageIO := ( stIO   := Stations.sUnloadHmiIO.y_Lock1_unlock,
									   image  		  := ADR(Global.OUTPUT_IMAGE),
									   iType  		  := ioType.OUTPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 3 ); 

    yLock2_lock 				: imageIO := ( stIO   := Stations.sUnloadHmiIO.y_Lock2_lock,
									   image  		  := ADR(Global.OUTPUT_IMAGE),
									   iType  		  := ioType.OUTPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 3 ); 

    yLock2_unlock 				: imageIO := ( stIO   := Stations.sUnloadHmiIO.y_Lock2_unlock,
									   image  		  := ADR(Global.OUTPUT_IMAGE),
									   iType  		  := ioType.OUTPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 3 ); 
    yPalletFix_lock 				: imageIO := ( stIO   := Stations.sUnloadHmiIO.y_PalletFix_lock,
									   image  		  := ADR(Global.OUTPUT_IMAGE),
									   iType  		  := ioType.OUTPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 3 ); 
									   
    yPalletFix_unlock 				: imageIO := ( stIO   := Stations.sUnloadHmiIO.y_PalletFix_unlock,
									   image  		  := ADR(Global.OUTPUT_IMAGE),
									   iType  		  := ioType.OUTPUT_BIT,
									   iByte 		  := 0,
									   iBit   		  := 3 ); 
								
END_STRUCT
END_TYPE
]]></Declaration>
  </DUT>
</TcPlcObject>